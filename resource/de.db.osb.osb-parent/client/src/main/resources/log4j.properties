LOG_DIR=${catalina.base}/logs

#----------------------------------------------------------------+
# In dieser Datei werden die Logdateien und Logformate festge-
# legt. Die meisten Teile (z.B. Logformate) dürfen nicht geändert
# werden.
# Zwingende zu konfigurieren sind aber (i.d.R. Umgebungsabhängig):
# - die Log-Pfade (.File=...)
# - die SyslogHost-Adressen (.SyslogHost=...)
# - Console-Ausgaben (müssen normalerweise unterdrückt werden)
# Diese Stellen sind mit "!CONFIG!" markiert.
# Die Defaults in dieser Datei sind für Entwicklungsumgebungen
# (Windows-basiert) gedacht.
#
# Optional können Thresholds von ConsoleAppender und
# TraceLogAppender eingestellt werden.
# Ausserdem ist es möglich, im TraceLog einzelne Categories /
# Logger gezielt zu beeinflussen (Thresholds, additivity).
#
# ---------------------------------------------------------------|
# (C) Copyright DB Systems                                       |
# ---------------------------------------------------------------+
# HISTORY:                                                       |
# DATUM                NAME               NOTIZ                  |
# 20.09.2007		   Marc Volz		  Änderungen wegen UNIX- 
#   				   Leon Tokarek       logrotate Mechanismus   	
# 08.06.2006           Marc Volz          Kommentierung verbessert
# 23.02.2006           Marc Volz          angepasst für Talo 3
# 16.06.2004           TNordmeyer         Kommentare aufgeraumt
# 05.09.2003           BVimalavong        angepasst für Talo 2.1
# 26.05.2003           TNordmeyer         angepasst für Talo 2.0
# 12.04.2002           BVimalavong        erstellt
# ---------------------------------------------------------------+

##################################################################
# Einstellungen rootCategory / rootLogger
# ---------------------------------------------------------------+

# !CONFIG! für Entwicklung. Die Severity kann hier eingestellt werden (TRACE, DEBUG, INFO, WARN)
log4j.rootCategory=DEBUG, TraceLogAppender, ProgErrorLogAppender, SConsoleAppender

# Alternativ, falls in das TraceLog nur TALO-Trace-Logs geschrieben werden sollen.
# Noch offen: können zwei Appender in die gleiche Datei schreiben?
#log4j.logger.TraceLog=TRACE, TraceLogAppender, ProgErrorLogAppender, SConsoleAppender

log4j.additivity.TraceLog=true

# !CONFIG! für Abnahmen / Produktion (ohne Console-Ausgaben)
#log4j.rootCategory=TRACE, TraceLogAppender, ProgErrorLogAppender

################################################################
# ConsoleAppender (soll in Produktion nicht verwendet werden)
# ---------------------------------------------------------------+
log4j.appender.SConsoleAppender=org.apache.log4j.ConsoleAppender
# !CONFIG! Threshold kann TRACE, DEBUG, INFO, WARN, ERROR, FATAL sein.
log4j.appender.SConsoleAppender.Threshold=TRACE
log4j.appender.SConsoleAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.SConsoleAppender.layout.ConversionPattern=%d{ISO8601} %c{3} %m%n
#----------------------------------------------------------------+

################################################################
# TraceLogAppender
# ---------------------------------------------------------------+
log4j.appender.TraceLogAppender=org.apache.log4j.FileAppender
# Auskommentierung des DatePattern aufgrund des einzurichtenden UNIX - logrotate Mechanismus.
# Die Anmerkungen in den ReleaseNotes (changes.txt) sind zu beachten. 
#log4j.appender.TraceLogAppender.DatePattern='.'yyyy-MM-dd

# minütlich (für Tests) log4j.appender.TraceLogAppender.DatePattern='.'yyyy-MM-dd-HH-mm 

# !CONFIG! Pfadangabe
log4j.appender.TraceLogAppender.File=${LOG_DIR}/trace.log
log4j.appender.TraceLogAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.TraceLogAppender.layout.ConversionPattern=%d{ISO8601}|%p|%t|%c{3}|%X{talo}|%m|%X{businessProcess}|%X{businessService}|%X{businessProcessInstanceId}%n
################################################################
# ProgErrorLogAppender
# ---------------------------------------------------------------+
log4j.appender.ProgErrorLogAppender=org.apache.log4j.FileAppender
# Auskommentierung des DatePattern aufgrund des einzurichtenden UNIX - logrotate Mechanismus.
# Die Anmerkungen in den ReleaseNotes (changes.txt) sind zu beachten.  
#log4j.appender.ProgErrorLogAppender.DatePattern='.'yyyy-MM-dd

log4j.appender.ProgErrorLogAppender.Threshold=ERROR
# !CONFIG! Pfadangabe
log4j.appender.ProgErrorLogAppender.File=${LOG_DIR}/progerror.log
log4j.appender.ProgErrorLogAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.ProgErrorLogAppender.layout.ConversionPattern=%d{ISO8601}|%p|%t|%c{3}|%X{talo}|%m|%X{processModelBusinessProcess}|%X{businessService}|%X{businessProcessInstanceId}%n

################################################################
# PERFORMANCE LOGGING 
# Eigene (TALO-interne) Category "PerfLog" mit PerfLogAppender.
# Meldungen werden nicht an die RootCatagory weitergegeben
# (aditivity = false).
# ---------------------------------------------------------------+
log4j.logger.PerfLog=TRACE, PerfLogAppender
log4j.additivity.PerfLog=false

log4j.appender.PerfLogAppender=org.apache.log4j.FileAppender
# Auskommentierung des DatePattern aufgrund des einzurichtenden UNIX - logrotate Mechanismus.
# Die Anmerkungen in den ReleaseNotes (changes.txt) sind zu beachten.  
#log4j.appender.PerfLogAppender.DatePattern='.'yyyy-MM-dd

# !CONFIG! Pfadangabe
log4j.appender.PerfLogAppender.File=${LOG_DIR}/perf.log
log4j.appender.PerfLogAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.PerfLogAppender.layout.ConversionPattern=%d{ISO8601}%m%n

##################################################################
# FACHLICHES LOGGING
# Eigene (TALO-interne) Category "FachLog" mit FachLogAppender.
# Meldungen werden nicht an die RootCatagory weitergegeben
# (aditivity = false).
# ---------------------------------------------------------------+
log4j.logger.FachLog=DEBUG, FachLogAppender
log4j.additivity.FachLog=false

log4j.appender.FachLogAppender=org.apache.log4j.FileAppender
# Auskommentierung des DatePattern aufgrund des einzurichtenden UNIX - logrotate Mechanismus.
# Die Anmerkungen in den ReleaseNotes (changes.txt) sind zu beachten.  
#log4j.appender.FachLogAppender.DatePattern='.'yyyy-MM-dd

# !CONFIG! Pfadangabe
log4j.appender.FachLogAppender.File=${LOG_DIR}/fach.log
log4j.appender.FachLogAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.FachLogAppender.layout.ConversionPattern=%d{ISO8601}%m%n

################################################################
# TECHNISCHES LOGGING
# Eigene (TALO-interne) Category "TechLog" mit TechLogAppender.
# Meldungen werden nicht an die RootCatagory weitergegeben
# (aditivity = false).
# ---------------------------------------------------------------+
log4j.logger.TechLog=DEBUG, TechLogAppender
log4j.additivity.TechLog=false

log4j.appender.TechLogAppender=org.apache.log4j.FileAppender
# Auskommentierung des DatePattern aufgrund des einzurichtenden UNIX - logrotate Mechanismus.
# Die Anmerkungen in den ReleaseNotes (changes.txt) sind zu beachten.  
#log4j.appender.TechLogAppender.DatePattern='.'yyyy-MM-dd

# !CONFIG! Pfadangabe
log4j.appender.TechLogAppender.File=${LOG_DIR}/tech.log
log4j.appender.TechLogAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.TechLogAppender.layout.ConversionPattern=%d{ISO8601}%m%n

################################################################
# Security LOGGING
# Eigene (TALO-interne) Category "SecuLog" mit SecuLogAppender.
# Meldungen werden nicht an die RootCatagory weitergegeben
# (aditivity = false).
# ---------------------------------------------------------------+
log4j.logger.SecuLog=DEBUG, SecuLogAppender
log4j.additivity.SecuLog=false

log4j.appender.SecuLogAppender=org.apache.log4j.FileAppender
# Auskommentierung des DatePattern aufgrund des einzurichtenden UNIX - logrotate Mechanismus.
# Die Anmerkungen in den ReleaseNotes (changes.txt) sind zu beachten. 
#log4j.appender.SecuLogAppender.DatePattern='.'yyyy-MM-dd

# !CONFIG! Pfadangabe
log4j.appender.SecuLogAppender.File=${LOG_DIR}/secu.log
log4j.appender.SecuLogAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.SecuLogAppender.layout.ConversionPattern=%d{ISO8601}%m%n

################################################################
# Cockpit LOGGING
# Eigene (TALO-interne) Category "CockpitLog" mit zwei Cockpit-
# Appendern (bis auf SyslogHost identische Einstellung).
# Meldungen werden nicht an die RootCatagory weitergegeben
# (additivity = false).
# Es wird nur noch ein CockpitAppender benötigt - der zweite
# kann zu Testzwecken genutzt werden, die Meldungen unter Windows
# z.B. mittels der KOLT-Komponente Kiwi Syslog Daemon
#	https://swd.bahn-net.db.de/plugins/wiki/index.php?id=8&type=g
#  angezeigt werden können.
# Der zweite Syslog-Appender ist normalerweise auskommentiert.
# ---------------------------------------------------------------+
log4j.logger.CockpitLog=DEBUG, CockpitAppender1
log4j.additivity.CockpitLog=false

log4j.appender.CockpitAppender1=org.apache.log4j.net.SyslogAppender
# !CONFIG! IP-Adresse der Cockpit-Eingangsschnittstelle
log4j.appender.CockpitAppender1.SyslogHost=localhost
log4j.appender.CockpitAppender1.layout=org.apache.log4j.PatternLayout
log4j.appender.CockpitAppender1.layout.ConversionPattern=%d{ISO8601}%m%n

# !CONFIG! falls z.B. für Testzwecke der zweite Appender benötigt wird.
#log4j.appender.CockpitAppender2=org.apache.log4j.net.SyslogAppender
#log4j.appender.CockpitAppender2.SyslogHost=localhost
#log4j.appender.CockpitAppender2.layout=org.apache.log4j.PatternLayout
#log4j.appender.CockpitAppender2.layout.ConversionPattern=%d{ISO8601}%m%n

################################################################
# Logger Konfiguration aus OSB
log4j.logger.db.training.easy.util=error
log4j.logger.db.training=debug
log4j.logger.db.training.security=debug

log4j.logger.net.sf=warn
log4j.logger.org.apache=warn
log4j.logger.org.apache.struts=error
log4j.logger.org.hibernate=warn
log4j.logger.org.displaytag=warn
log4j.logger.org.springframework=warn
log4j.logger.org.acegisecurity=warn

### c3p0 ###
log4j.logger.com.mchange.v2=warn

### log just the SQL ###
log4j.logger.org.hibernate.SQL=warn

### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=warn

### log Struts BackRequestProcessor ###
log4j.logger.org.mwolff=warn

log4j.logger.db.training.easy.util.ServletTimer=debug
